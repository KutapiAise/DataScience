
uninstall everything (tf, cuda, visual studio)
pip install tensorflow-gpu
download and install visual studio community 2017 (2019 won't work)
I also have installed the c++ workload from visual studio (not sure if it's necessary but it has the required compiler visual c++ 15.x)
download and install cuda 10.0 (the one i have is 10.0.130)
go to system environment variables (search it in the windows bar) > advanced > click Environment Variables...
create New user variables (do not confuse with system var)
Variable name: CUDA_PATH,
Variable value: browse to the cuda directory down to the version directory (mine is C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0)
the guide says you need cudnn 7.4.1, but i got an error about expected version being 7.6 minimum. go to the nvidia developers cudnn archive and download "cudnn v7.6.0 for CUDA 10.0" (be sure you get the right file). unzip, put the cudnn files into the corresponding cuda directories (lib, include, bin).
From there everything worked like a charm. I haven't been able to build the cuda sample file from visual studio (devicequery) but it's not a vital step. Almost every error was due to incompatible versions of the files, took me 3-4 days to figure the right mix. Hope that help :)


How to check if the tensorflow package was installed correctly?

# importing the tensorflow package
import tensorflow as tf 
#To test CUDA support for your Tensorflow installation, you can run the following command in the shell:
tf.test.is_built_with_cuda()
#Finally, to confirm that the GPU is available to Tensorflow, you can test using a built-in utility function in TensorFlow as shown here:
tf.test.is_gpu_available(cuda_only=False, min_cuda_compute_capability=None)

t takes a few minutes to return a result from this; when it is finished it returns True, and then the prompt `>>>`appears again. 

Yow should refer to the tensorflow site before installing:
https://www.tensorflow.org/install/gpu
